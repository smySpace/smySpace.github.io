<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>聊一下SVG[可缩放矢量图形（Scalable Vector Graphics）]格式</title>
    <link href="/2024/11/01/svg/"/>
    <url>/2024/11/01/svg/</url>
    
    <content type="html"><![CDATA[<p>说起图片格式,常见的就是png,jpg<br>SVG格式估计也就前端和UI熟悉</p><h3 id="这种格式是什么衍生出来的？"><a href="#这种格式是什么衍生出来的？" class="headerlink" title="这种格式是什么衍生出来的？"></a>这种格式是什么衍生出来的？</h3><p>PNG图像受到分辨率的影响,分辨率越高,图像越清晰.在放大或缩小时,可能会出现锯齿状边缘或失真</p><p>SVG图像不受分辨率的限制,可以无损地放大或缩小,而不会损失图像质量</p><p>故无损的特性,在图标制作领域是首选<br>你所看到的各种icon几乎都是</p><h3 id="初见SVG格式"><a href="#初见SVG格式" class="headerlink" title="初见SVG格式"></a>初见SVG格式</h3><p>PNG存储是数据块(不详细展开)</p><p>而SVG存储的是XML格式的树状的字符串<br>如下</p><pre><code class="hljs"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">rect</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;red&quot;</span> /&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br></code></pre></td></tr></table></figure></code></pre><p>这里就是一个 300*200 svg,内部填满一个红色的矩形</p><p>我相信想了解SVG格式 <a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial">W3C文档更专业</a></p><h3 id="我的工作"><a href="#我的工作" class="headerlink" title="我的工作"></a>我的工作</h3><p>对于设计软件，像pixso,PS，sketch,figma,支持导入导入SVG格式是很基础且必要的功能<br>不过市面的设计软件对SVG的兼容性主要是常用的元素和属性,和浏览器渲染的差距不小</p><p>我的工作就是解析SVG渲染为正确的效果<br>用C++渲染SVG听起来不像21世纪做的事对吧,哈哈哈哈</p><p>如下展示一个图标的结构<br><img src="/2024/11/01/svg/iconpark.png" alt="iconPark"></p><p>这一个小图标是由8条矢量路径组成的,点线坐标+属性理论上可以表示任何复杂的图形,只是成本问题</p><p>说一下这块的实现要求:</p><p>1.还原度,要做到图形的还原</p><p>2.性能,看到这你想 ? 一个小图标会有什么性能问题, 哈哈哈, 我们有用户导入240M+的svg,纯字符串的文件<br>  200多M可想而知几百万行,notpad++打开直接都卡死, 第二版引擎我做到了</p><p>3.可维护性!,这块解析其实还挺复杂,存在属性继承,引用等等,第一版引擎已经不好维护了(第一版也是我设计的)</p><p>思路:</p><p>序列化与反序列化:<br>输入xml content str, 需要输出svg element root的一棵树<br>这棵树必须是完全可用的状态,他的图层结构,属性等等一切</p><p>反之亦然,输入svg element root,能生成xml的内容</p><p>未完待续……    </p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>本站成立公告</title>
    <link href="/2024/11/01/%E6%9C%AC%E7%AB%99%E8%BF%81%E7%A7%BB/"/>
    <url>/2024/11/01/%E6%9C%AC%E7%AB%99%E8%BF%81%E7%A7%BB/</url>
    
    <content type="html"><![CDATA[<p>最近的四五年很少写笔记了,是有多方面的原因</p><ul><li><p>工作太忙了是借口,其实还是人变懒了</p></li><li><p>缺少一个合适的地方让我写写画画</p></li><li><p>肚子里也没有什么干货,没有分享欲</p></li><li><p><a href="https://shenmingyi.blog.csdn.net/">My Csdn</a> 我的csdn前前后后7,8年也是写了几百篇了,现在一看文章质量惨不忍睹…<br>120w+的访问量,本想继续写,可这个平台我是真不想在登录了,广告满天飞,想复制个代码还要登录,甚至还要关注&#x2F;开通VIP<br>这不符合开源的精神,吃相属实难看</p><p>还要吐槽一下,csdn平台的文章质量确实偏低,看N篇才能找到我想要的东西,但是在百度的搜索权重占的还靠前<br>谈csdn色变啊,很多程序员现在都很厌恶这个平台,再次降低了我想要更新的欲望</p></li></ul><p>所以本站成立了,这个地方足够清净,好好维护我这一亩三分地,谢谢诸位!</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
